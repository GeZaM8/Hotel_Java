/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.components;

import dao.BookingDAO;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import koneksi.Koneksi;
import model.Booking;


/**
 *
 * @author Serge
 */
public class PageBooking extends javax.swing.JPanel {

    private BookingDAO bookingDAO = new BookingDAO();
    private Connection con;
    ResultSet rs;
    
    int id = 0;
    /**
     * Creates new form PageCustomer
     */
    public PageBooking() {
        initComponents();
        Look1.addActionListener(e -> showLookupDialog(1));
        Look2.addActionListener(e -> showLookupDialog(2));
        
        con = Koneksi.getConnection();
    }
    
    private void showLookupDialog(int itemNumber) {
        try {
            Connection conn = Koneksi.getConnection(); // Menggunakan koneksi yang benar
            String sql;
            DefaultTableModel model;

            if (itemNumber == 1) {
                sql = "SELECT Rnum, price, RStatus FROM rooms";
                model = new DefaultTableModel(new String[]{"Room Number", "Price", "Status"}, 0);
            } else {
                sql = "SELECT CustNum FROM customers";
                model = new DefaultTableModel(new String[]{"Customer Number"}, 0);
            }

            Statement statement = conn.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);

            while (resultSet.next()) {
                if (itemNumber == 1) {
                    double price = resultSet.getDouble("price");
                    String formattedPrice = (price % 1 == 0) ? String.valueOf((int) price) : String.valueOf(price);
                    model.addRow(new Object[]{
                        resultSet.getString("Rnum"),
                        formattedPrice,
                        resultSet.getString("RStatus")
                    });
                } else {
                    model.addRow(new Object[]{
                        resultSet.getString("CustNum")
                    });
                }
            }

            JTable tblLookup = new JTable(model);
            JOptionPane.showMessageDialog(this, new JScrollPane(tblLookup), "Pilih Data", JOptionPane.PLAIN_MESSAGE);

            int selectedRow = tblLookup.getSelectedRow();
            if (selectedRow != -1) {
                if (itemNumber == 1) {
                    String roomNumber = tblLookup.getValueAt(selectedRow, 0).toString();
                    String price = tblLookup.getValueAt(selectedRow, 1).toString();
                    String status = tblLookup.getValueAt(selectedRow, 2).toString();
                    InputIdRoom.setText(roomNumber);
                    inputHarga.setText(price);
                    inputStatus.setText(status);
                } else {
                    String IdCust = tblLookup.getValueAt(selectedRow, 0).toString();
                    InputIdCustomer.setText(IdCust);
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memuat data: " + ex.getMessage());
        }
    }
           
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        inputTanggal = new com.toedter.calendar.JDateChooser();
        btnRefresh = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        scrTableBooking = new javax.swing.JScrollPane();
        tableBooking = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();
        inputIdBook = new javax.swing.JTextField();
        btnBatal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        InputIdRoom = new javax.swing.JTextField();
        InputIdCustomer = new javax.swing.JTextField();
        inputDuration = new javax.swing.JTextField();
        inputHarga = new javax.swing.JTextField();
        Price = new javax.swing.JLabel();
        Look1 = new javax.swing.JButton();
        Look2 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        inputStatus = new javax.swing.JTextField();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jLabel7.setText("Id Room");

        jLabel9.setText("Tanggal Booking");

        jLabel3.setText("Search:");

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        tableBooking.setBackground(new java.awt.Color(203, 220, 235));
        tableBooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id Booking", "Id Room", "Id Customer", "Status", "Duration", "Tanggal Booking", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableBooking.setGridColor(new java.awt.Color(51, 51, 51));
        tableBooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableBookingMousePressed(evt);
            }
        });
        scrTableBooking.setViewportView(tableBooking);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Hotel Management System");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setText("Booking");

        btnSimpan.setText("Simpan");
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        jLabel4.setText("Id Booking");

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        inputIdBook.setEditable(false);

        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });

        jLabel6.setText("Id Customer");

        jLabel8.setText("Duration");

        Price.setText("Price");

        Look1.setText("LOOKUP");
        Look1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Look1ActionPerformed(evt);
            }
        });

        Look2.setText("LOOKUP");
        Look2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Look2ActionPerformed(evt);
            }
        });

        jLabel10.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(346, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(483, 483, 483))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(361, 361, 361))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(Look2)
                        .addGap(66, 66, 66))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel4)
                                        .addComponent(jLabel7))
                                    .addGap(140, 140, 140))
                                .addComponent(InputIdRoom)
                                .addComponent(inputIdBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(Look1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(InputIdCustomer)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(77, 77, 77))))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(inputTanggal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnSimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnHapus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBatal))
                                    .addComponent(inputDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(inputStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10)))
                            .addComponent(Price)
                            .addComponent(inputHarga, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnRefresh))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(scrTableBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 694, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(scrTableBooking, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InputIdRoom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Look1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(InputIdCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Look2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputDuration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Price)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputHarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSimpan)
                            .addComponent(btnHapus)
                            .addComponent(btnBatal))
                        .addGap(24, 24, 24))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        try {
            // 1. Ambil Data dari Inputan Form
            int roomId = Integer.parseInt(InputIdRoom.getText());
            int customerId = Integer.parseInt(InputIdCustomer.getText());
            String status = inputStatus.getText().toString(); // Menggunakan ComboBox untuk status
            java.util.Date utilDate = inputTanggal.getDate(); // Menggunakan JDateChooser
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            int duration = Integer.parseInt(inputDuration.getText());
            int cost = Integer.parseInt(inputHarga.getText());

            // 2. Validasi Data
            if (roomId <= 0 || customerId <= 0 || duration <= 0 || cost <= 0 || status.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Semua data harus diisi dengan benar!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // 3. Buat Objek Booking
            Booking booking = new Booking();
            booking.setRoomId(roomId);
            booking.setCustomerId(customerId);
            booking.setStatus(status);
            booking.setDate(sqlDate);
            booking.setDuration(duration);
            booking.setCost(cost);

            // 4. Simpan ke Database
            BookingDAO bookingDAO = new BookingDAO();
            bookingDAO.saveBooking(booking);

            // 5. Notifikasi Berhasil
            JOptionPane.showMessageDialog(this, "Data booking berhasil disimpan!", "Sukses", JOptionPane.INFORMATION_MESSAGE);

            // 6. Reset Form setelah penyimpanan
            InputIdRoom.setText("");
            InputIdCustomer.setText("");
            inputStatus.setText(""); // Reset ke default
            inputTanggal.setDate(null);
            inputDuration.setText("");
            inputHarga.setText("");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input harus berupa angka!" + e, "Error", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        int id = Integer.parseInt(inputIdBook.getText());
        bookingDAO.deleteBooking(id);
        refreshTable();
        JOptionPane.showMessageDialog(this, "Booking berhasil dihapus!");
    }//GEN-LAST:event_btnHapusActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
         inputIdBook.setText("");
         InputIdRoom.setText("");
         InputIdCustomer.setText("");
         inputDuration.setText("");
         inputHarga.setText("");
         inputTanggal.setDate(null);
    }//GEN-LAST:event_btnBatalActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        
    }//GEN-LAST:event_formFocusGained

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        refreshTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void tableBookingMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBookingMousePressed
        int row = tableBooking.getSelectedRow();
        if (row >= 0) {
            inputIdBook.setText(tableBooking.getValueAt(row, 0).toString());
            InputIdRoom.setText(tableBooking.getValueAt(row, 1).toString());
            InputIdCustomer.setText(tableBooking.getValueAt(row, 2).toString());
            inputDuration.setText(tableBooking.getValueAt(row, 4).toString());
            inputHarga.setText(tableBooking.getValueAt(row, 5).toString());
            inputTanggal.setDate((java.util.Date) tableBooking.getValueAt(row, 3));
        }
    }//GEN-LAST:event_tableBookingMousePressed

    private void Look1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Look1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Look1ActionPerformed

    private void Look2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Look2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Look2ActionPerformed

   private void refreshTable() {
        tableBooking.setModel(bookingDAO.getModelAllBooking());
    }
    
    public int confirm(String text, String title) {
        return JOptionPane.showOptionDialog(null, text, title, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, null, null);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InputIdCustomer;
    private javax.swing.JTextField InputIdRoom;
    private javax.swing.JButton Look1;
    private javax.swing.JButton Look2;
    private javax.swing.JLabel Price;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JTextField inputDuration;
    private javax.swing.JTextField inputHarga;
    private javax.swing.JTextField inputIdBook;
    private javax.swing.JTextField inputStatus;
    private com.toedter.calendar.JDateChooser inputTanggal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JScrollPane scrTableBooking;
    private javax.swing.JTable tableBooking;
    // End of variables declaration//GEN-END:variables
}
